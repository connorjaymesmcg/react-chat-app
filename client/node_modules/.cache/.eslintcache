[{"/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/index.js":"1","/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/App.jsx":"2","/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/Components/ChannelContainer.jsx":"3","/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/Components/ChannelListContainer.jsx":"4","/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/Components/index.js":"5","/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/Components/ChannelSearch.jsx":"6","/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/assets/SearchIcon.js":"7","/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/Components/TeamChannelList.jsx":"8","/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/assets/AddChannel.js":"9","/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/Components/TeamChannelPreview.jsx":"10","/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/Components/Auth.jsx":"11"},{"size":147,"mtime":1633191981106,"results":"12","hashOfConfig":"13"},{"size":688,"mtime":1633199285944,"results":"14","hashOfConfig":"13"},{"size":159,"mtime":1633192646750,"results":"15","hashOfConfig":"13"},{"size":1982,"mtime":1633196926562,"results":"16","hashOfConfig":"13"},{"size":376,"mtime":1633199310591,"results":"17","hashOfConfig":"13"},{"size":1037,"mtime":1633195139572,"results":"18","hashOfConfig":"13"},{"size":468,"mtime":1633195079329,"results":"19","hashOfConfig":"13"},{"size":964,"mtime":1633195920332,"results":"20","hashOfConfig":"13"},{"size":703,"mtime":1633195274960,"results":"21","hashOfConfig":"13"},{"size":1057,"mtime":1633196851995,"results":"22","hashOfConfig":"13"},{"size":4122,"mtime":1633201329126,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ni3qlg",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/index.js",[],["51","52"],"/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/App.jsx",["53"],"import React from 'react';\nimport { StreamChat } from 'stream-chat';\nimport { Chat } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\n\nimport { ChannelContainer, ChannelListContainer, Auth } from './Components';\nimport './App.css';\n\nconst apiKey = process.env.REACT_APP_STREAM_KEY;\n\n// Create instance of Stream chat with API key\nconst client = StreamChat.getInstance(apiKey);\n\nconst authToken = false;\n\nconst App = () => {\n\n  if (!authToken) return <Auth />;\n\n  return (\n    <div className='app__wrapper'>\n      <Chat client={client} theme='team light'>\n        <ChannelListContainer />\n        <ChannelContainer />\n      </Chat>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/Components/ChannelContainer.jsx",[],"/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/Components/ChannelListContainer.jsx",["54","55"],"import React from 'react';\nimport { ChannelList, useChatContext } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\n\nimport { ChannelSearch, TeamChannelList, TeamChannelPreview } from './';\nimport SwordIcon from '../assets/swords.png';\nimport LogoutIcon from '../assets/logout.png';\n\n\nconst SideBar = () => {\n  return (\n    <div className='channel-list__sidebar'>\n      <div className='channel-list__sidebar__icon1'>\n        <div className='icon1__inner'>\n          <img src={SwordIcon} alt=\"swords\" width='30' />\n        </div>\n      </div>\n      <div className='channel-list__sidebar__icon2'>\n        <div className='icon1__inner'>\n          <img src={LogoutIcon} alt=\"logout\" width='30' />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst CompanyHeader = () => {\n  return (\n    <div className='channel-list__header'>\n      <p className='channel-list__header__text'> BattleChat </p>\n    </div>\n  );\n};\n\nconst ChannelListContainer = () => {\n  return (\n    <>\n      <SideBar />\n      <div className='channel-list__list__wrapper'>\n        <CompanyHeader />\n        <ChannelSearch />\n        <ChannelList\n          filters={{}}\n          channelRenderFilterFn={() => { }}\n          List={(listProps) => (\n            <TeamChannelList\n              {...listProps}\n              type='team'\n            />\n          )}\n          Preview={(previewProps) => (\n            <TeamChannelPreview\n              {...previewProps}\n              type='team'\n            />\n          )}\n        />\n        <ChannelList\n          filters={{}}\n          channelRenderFilterFn={() => { }}\n          List={(listProps) => (\n            <TeamChannelList\n              {...listProps}\n              type='messaging'\n            />\n          )}\n          Preview={(previewProps) => (\n            <TeamChannelPreview\n              {...previewProps}\n              type='messaging'\n            />\n          )}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ChannelListContainer;\n","/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/Components/index.js",[],"/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/Components/ChannelSearch.jsx",["56","57","58"],"import React, { useState, useEffect } from 'react';\nimport { useChatContext } from 'stream-chat-react';\n\nimport { SearchIcon } from '../assets/SearchIcon';\n\nconst ChannelSearch = () => {\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const getChannels = async (text) => {\n    try {\n      //! TODO fetch channels\n    } catch (error) {\n      console.log(error);\n      setQuery('');\n    }\n  };\n\n  const onSearch = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setQuery(e.target.value);\n    getChannels(e.target.value);\n  };\n\n\n  return (\n    <div className='channel-search__container'>\n      <div className='channel-search__input__wrapper'>\n        <div className='channel-search__input__icon'>\n          <SearchIcon />\n        </div>\n        <input\n          className='channel-search__input__text'\n          type=\"text\"\n          placeholder='Search'\n          value={query}\n          onChange={onSearch}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ChannelSearch;\n","/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/assets/SearchIcon.js",[],"/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/Components/TeamChannelList.jsx",["59"],"import React from 'react';\n\nimport { AddChannel } from '../assets/AddChannel.js';\n\nconst TeamChannelList = ({ children, error = false, loading, type }) => {\n  if (error) {\n    return type === 'team' ? (\n      <div className='team-channel-list'>\n        <p className='team-channel-list__message'>\n          Connection error, please wait a moment and try again.\n        </p>\n      </div>\n    ) : null;\n  }\n\n  if (loading) {\n    return (\n      <div className='team-channel-list'>\n        <p className='team-channel-list__message loading'>\n          {type === 'team' ? 'Channels' : 'Messages'} Loading...\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className='team-channel-list'>\n      <div className='team-channel-list__header'>\n        <p className='team-channel-list__header__title'>\n          {type === 'team' ? 'Channels' : 'Direct Messages'} Loading...\n        </p>\n      </div>\n      {children}\n    </div>\n  );\n};\n\nexport default TeamChannelList;\n","/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/assets/AddChannel.js",[],"/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/Components/TeamChannelPreview.jsx",[],"/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/Components/Auth.jsx",["60","61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":15},{"ruleId":"67","severity":1,"message":"71","line":2,"column":23,"nodeType":"69","messageId":"70","endLine":2,"endColumn":37},{"ruleId":"67","severity":1,"message":"68","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":15},{"ruleId":"67","severity":1,"message":"72","line":1,"column":27,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"71","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":24},{"ruleId":"67","severity":1,"message":"73","line":8,"column":10,"nodeType":"69","messageId":"70","endLine":8,"endColumn":17},{"ruleId":"67","severity":1,"message":"74","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":20},{"ruleId":"67","severity":1,"message":"68","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":15},{"ruleId":"67","severity":1,"message":"75","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":13},{"ruleId":"67","severity":1,"message":"76","line":7,"column":7,"nodeType":"69","messageId":"70","endLine":7,"endColumn":19},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'Cookies' is defined but never used.","Identifier","unusedVar","'useChatContext' is defined but never used.","'useEffect' is defined but never used.","'loading' is assigned a value but never used.","'AddChannel' is defined but never used.","'axios' is defined but never used.","'initialState' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]