{"ast":null,"code":"var _jsxFileName = \"/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/Components/TeamChannelPreview.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Avater, useChatContext } from 'stream-chat-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TeamChannelPreview = ({\n  channel,\n  type\n}) => {\n  _s();\n\n  const {\n    channel: activeChannel,\n    client\n  } = useChatContext();\n\n  const ChannelPreview = () => {\n    var _channel$data;\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"channel-preview__item\",\n      children: [\"# \", (channel === null || channel === void 0 ? void 0 : (_channel$data = channel.data) === null || _channel$data === void 0 ? void 0 : _channel$data.name) || (channel === null || channel === void 0 ? void 0 : channel.data.id)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this);\n  };\n\n  const directPreview = () => {\n    const members = Object.values(channel.state.members).filter(({\n      user\n    }) => user.id !== client.userID);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TeamChannelPreview, \"RNfKNcIjMcGRvLZY+ZVgrXscPd8=\", false, function () {\n  return [useChatContext];\n});\n\n_c = TeamChannelPreview;\nexport default TeamChannelPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamChannelPreview\");","map":{"version":3,"sources":["/Users/connormcginnis/Desktop/Projects/react-chat-application/client/src/Components/TeamChannelPreview.jsx"],"names":["React","Avater","useChatContext","TeamChannelPreview","channel","type","activeChannel","client","ChannelPreview","data","name","id","directPreview","members","Object","values","state","filter","user","userID"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,mBAAvC;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AAAA;;AAChD,QAAM;AAAED,IAAAA,OAAO,EAAEE,aAAX;AAA0BC,IAAAA;AAA1B,MAAqCL,cAAc,EAAzD;;AAEA,QAAMM,cAAc,GAAG;AAAA;;AAAA,wBACrB;AAAG,MAAA,SAAS,EAAC,uBAAb;AAAA,uBACK,CAAAJ,OAAO,SAAP,IAAAA,OAAO,WAAP,6BAAAA,OAAO,CAAEK,IAAT,gEAAeC,IAAf,MAAuBN,OAAvB,aAAuBA,OAAvB,uBAAuBA,OAAO,CAAEK,IAAT,CAAcE,EAArC,CADL;AAAA;AAAA;AAAA;AAAA;AAAA,YADqB;AAAA,GAAvB;;AAMA,QAAMC,aAAa,GAAG,MAAM;AAC1B,UAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcX,OAAO,CAACY,KAAR,CAAcH,OAA5B,EAAqCI,MAArC,CAA4C,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAcA,IAAI,CAACP,EAAL,KAAYJ,MAAM,CAACY,MAA7E,CAAhB;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlBD;;GAAMhB,kB;UACuCD,c;;;KADvCC,kB;AAoBN,eAAeA,kBAAf","sourcesContent":["import React from 'react';\nimport { Avater, useChatContext } from 'stream-chat-react';\n\nconst TeamChannelPreview = ({ channel, type }) => {\n  const { channel: activeChannel, client } = useChatContext();\n\n  const ChannelPreview = () => (\n    <p className='channel-preview__item'>\n      # {channel?.data?.name || channel?.data.id}\n    </p>\n  );\n\n  const directPreview = () => {\n    const members = Object.values(channel.state.members).filter(({ user }) => user.id !== client.userID);\n  };\n\n  return (\n    <div>\n\n    </div>\n  );\n};\n\nexport default TeamChannelPreview;\n"]},"metadata":{},"sourceType":"module"}