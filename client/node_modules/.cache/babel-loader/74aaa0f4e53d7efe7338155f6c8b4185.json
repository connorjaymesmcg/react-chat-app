{"ast":null,"code":"import { useMemo } from 'react';\nimport { isDate, isDayOrMoment } from '../../../context/TranslationContext';\nexport var useCreateChannelStateContext = function (value) {\n  var _a;\n\n  var acceptedFiles = value.acceptedFiles,\n      channel = value.channel,\n      channelConfig = value.channelConfig,\n      error = value.error,\n      hasMore = value.hasMore,\n      loading = value.loading,\n      loadingMore = value.loadingMore,\n      maxNumberOfFiles = value.maxNumberOfFiles,\n      members = value.members,\n      _b = value.messages,\n      messages = _b === void 0 ? [] : _b,\n      multipleUploads = value.multipleUploads,\n      mutes = value.mutes,\n      notifications = value.notifications,\n      pinnedMessages = value.pinnedMessages,\n      quotedMessage = value.quotedMessage,\n      _c = value.read,\n      read = _c === void 0 ? {} : _c,\n      skipMessageDataMemoization = value.skipMessageDataMemoization,\n      thread = value.thread,\n      threadHasMore = value.threadHasMore,\n      threadLoadingMore = value.threadLoadingMore,\n      _d = value.threadMessages,\n      threadMessages = _d === void 0 ? [] : _d,\n      watcherCount = value.watcherCount,\n      watcher_count = value.watcher_count,\n      watchers = value.watchers;\n  var channelId = channel.cid;\n  var lastRead = channel.initialized && ((_a = channel.lastRead()) === null || _a === void 0 ? void 0 : _a.getTime());\n  var membersLength = Object.keys(members || []).length;\n  var notificationsLength = notifications.length;\n  var readUsers = Object.values(read);\n  var readUsersLength = readUsers.length;\n  var readUsersLastReads = readUsers.map(function (_a) {\n    var last_read = _a.last_read;\n    return last_read.toISOString();\n  }).join();\n  var threadMessagesLength = threadMessages === null || threadMessages === void 0 ? void 0 : threadMessages.length;\n  var memoizedMessageData = skipMessageDataMemoization ? messages : messages.map(function (_a) {\n    var deleted_at = _a.deleted_at,\n        latest_reactions = _a.latest_reactions,\n        pinned = _a.pinned,\n        reply_count = _a.reply_count,\n        status = _a.status,\n        updated_at = _a.updated_at;\n    return \"\" + deleted_at + (latest_reactions ? latest_reactions.map(function (_a) {\n      var type = _a.type;\n      return type;\n    }).join() : '') + pinned + reply_count + status + (updated_at && (isDayOrMoment(updated_at) || isDate(updated_at)) ? updated_at.toISOString() : updated_at || '');\n  }).join();\n  var memoizedThreadMessageData = threadMessages.map(function (_a) {\n    var deleted_at = _a.deleted_at,\n        latest_reactions = _a.latest_reactions,\n        pinned = _a.pinned,\n        status = _a.status,\n        updated_at = _a.updated_at;\n    return \"\" + deleted_at + (latest_reactions ? latest_reactions.map(function (_a) {\n      var type = _a.type;\n      return type;\n    }).join() : '') + pinned + status + (updated_at && (isDayOrMoment(updated_at) || isDate(updated_at)) ? updated_at.toISOString() : updated_at || '');\n  }).join();\n  var channelStateContext = useMemo(function () {\n    return {\n      acceptedFiles: acceptedFiles,\n      channel: channel,\n      channelConfig: channelConfig,\n      error: error,\n      hasMore: hasMore,\n      loading: loading,\n      loadingMore: loadingMore,\n      maxNumberOfFiles: maxNumberOfFiles,\n      members: members,\n      messages: messages,\n      multipleUploads: multipleUploads,\n      mutes: mutes,\n      notifications: notifications,\n      pinnedMessages: pinnedMessages,\n      quotedMessage: quotedMessage,\n      read: read,\n      thread: thread,\n      threadHasMore: threadHasMore,\n      threadLoadingMore: threadLoadingMore,\n      threadMessages: threadMessages,\n      watcher_count: watcher_count,\n      watcherCount: watcherCount,\n      watchers: watchers\n    };\n  }, [channelId, error, hasMore, lastRead, loading, loadingMore, membersLength, memoizedMessageData, memoizedThreadMessageData, notificationsLength, quotedMessage, readUsersLength, readUsersLastReads, skipMessageDataMemoization, thread, threadHasMore, threadLoadingMore, threadMessagesLength, watcherCount]);\n  return channelStateContext;\n};","map":{"version":3,"sources":["/Users/connormcginnis/Desktop/Projects/react-chat-application/client/node_modules/stream-chat-react/dist/components/Channel/hooks/useCreateChannelStateContext.js"],"names":["useMemo","isDate","isDayOrMoment","useCreateChannelStateContext","value","_a","acceptedFiles","channel","channelConfig","error","hasMore","loading","loadingMore","maxNumberOfFiles","members","_b","messages","multipleUploads","mutes","notifications","pinnedMessages","quotedMessage","_c","read","skipMessageDataMemoization","thread","threadHasMore","threadLoadingMore","_d","threadMessages","watcherCount","watcher_count","watchers","channelId","cid","lastRead","initialized","getTime","membersLength","Object","keys","length","notificationsLength","readUsers","values","readUsersLength","readUsersLastReads","map","last_read","toISOString","join","threadMessagesLength","memoizedMessageData","deleted_at","latest_reactions","pinned","reply_count","status","updated_at","type","memoizedThreadMessageData","channelStateContext"],"mappings":"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","sourcesContent":["import { useMemo } from 'react';\nimport { isDate, isDayOrMoment } from '../../../context/TranslationContext';\nexport var useCreateChannelStateContext = function (value) {\n    var _a;\n    var acceptedFiles = value.acceptedFiles, channel = value.channel, channelConfig = value.channelConfig, error = value.error, hasMore = value.hasMore, loading = value.loading, loadingMore = value.loadingMore, maxNumberOfFiles = value.maxNumberOfFiles, members = value.members, _b = value.messages, messages = _b === void 0 ? [] : _b, multipleUploads = value.multipleUploads, mutes = value.mutes, notifications = value.notifications, pinnedMessages = value.pinnedMessages, quotedMessage = value.quotedMessage, _c = value.read, read = _c === void 0 ? {} : _c, skipMessageDataMemoization = value.skipMessageDataMemoization, thread = value.thread, threadHasMore = value.threadHasMore, threadLoadingMore = value.threadLoadingMore, _d = value.threadMessages, threadMessages = _d === void 0 ? [] : _d, watcherCount = value.watcherCount, watcher_count = value.watcher_count, watchers = value.watchers;\n    var channelId = channel.cid;\n    var lastRead = channel.initialized && ((_a = channel.lastRead()) === null || _a === void 0 ? void 0 : _a.getTime());\n    var membersLength = Object.keys(members || []).length;\n    var notificationsLength = notifications.length;\n    var readUsers = Object.values(read);\n    var readUsersLength = readUsers.length;\n    var readUsersLastReads = readUsers.map(function (_a) {\n        var last_read = _a.last_read;\n        return last_read.toISOString();\n    }).join();\n    var threadMessagesLength = threadMessages === null || threadMessages === void 0 ? void 0 : threadMessages.length;\n    var memoizedMessageData = skipMessageDataMemoization\n        ? messages\n        : messages\n            .map(function (_a) {\n            var deleted_at = _a.deleted_at, latest_reactions = _a.latest_reactions, pinned = _a.pinned, reply_count = _a.reply_count, status = _a.status, updated_at = _a.updated_at;\n            return \"\" + deleted_at + (latest_reactions ? latest_reactions.map(function (_a) {\n                var type = _a.type;\n                return type;\n            }).join() : '') + pinned + reply_count + status + (updated_at && (isDayOrMoment(updated_at) || isDate(updated_at))\n                ? updated_at.toISOString()\n                : updated_at || '');\n        })\n            .join();\n    var memoizedThreadMessageData = threadMessages\n        .map(function (_a) {\n        var deleted_at = _a.deleted_at, latest_reactions = _a.latest_reactions, pinned = _a.pinned, status = _a.status, updated_at = _a.updated_at;\n        return \"\" + deleted_at + (latest_reactions ? latest_reactions.map(function (_a) {\n            var type = _a.type;\n            return type;\n        }).join() : '') + pinned + status + (updated_at && (isDayOrMoment(updated_at) || isDate(updated_at))\n            ? updated_at.toISOString()\n            : updated_at || '');\n    })\n        .join();\n    var channelStateContext = useMemo(function () { return ({\n        acceptedFiles: acceptedFiles,\n        channel: channel,\n        channelConfig: channelConfig,\n        error: error,\n        hasMore: hasMore,\n        loading: loading,\n        loadingMore: loadingMore,\n        maxNumberOfFiles: maxNumberOfFiles,\n        members: members,\n        messages: messages,\n        multipleUploads: multipleUploads,\n        mutes: mutes,\n        notifications: notifications,\n        pinnedMessages: pinnedMessages,\n        quotedMessage: quotedMessage,\n        read: read,\n        thread: thread,\n        threadHasMore: threadHasMore,\n        threadLoadingMore: threadLoadingMore,\n        threadMessages: threadMessages,\n        watcher_count: watcher_count,\n        watcherCount: watcherCount,\n        watchers: watchers,\n    }); }, [\n        channelId,\n        error,\n        hasMore,\n        lastRead,\n        loading,\n        loadingMore,\n        membersLength,\n        memoizedMessageData,\n        memoizedThreadMessageData,\n        notificationsLength,\n        quotedMessage,\n        readUsersLength,\n        readUsersLastReads,\n        skipMessageDataMemoization,\n        thread,\n        threadHasMore,\n        threadLoadingMore,\n        threadMessagesLength,\n        watcherCount,\n    ]);\n    return channelStateContext;\n};\n"]},"metadata":{},"sourceType":"module"}